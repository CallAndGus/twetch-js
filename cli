#!/usr/bin/env node

const Twetch = require('./dist/twetch.node.min.js');
const fs = require('fs');
const twetch = new Twetch();

require('yargs')
	.scriptName('twetch')
	.usage('$0 post --content "Hello World"')
	.command('init', 'to get started run this', {}, async argv => {
		const balance = await twetch.wallet.balance();
		console.log(
			`1) copy your signing address (${twetch.wallet.address()}) and add it as a signing address on https://twetch.app/developer`
		);
		console.log(`2) fund your address with some BSV (${twetch.wallet.address()})`);
	})
	.command(
		'post',
		'publish a message on Twetch',
		yargs =>
			yargs
				.option('f', {
					alias: 'file',
					describe: 'path of file you want posted to twetch'
				})
				.option('c', {
					alias: 'content',
					describe: 'content you want posted to twetch'
				})
				.option('r', {
					alias: 'reply',
					describe: 'txid of post to reply to'
				}),
		async argv => {
			const payload = {
				bContent: argv.file ? undefined : argv.content,
				mapComment: argv.file && argv.content ? argv.content : 'null',
				mapReply: argv.reply || 'null'
			};

			const response = await twetch.publish('twetch/post@0.0.1', payload, argv.file);
			if (response.published) {
				console.log(`published! https://twetch.app/t/${response.txid}`);
			}
			process.exit();
		}
	)
	.command('balance', 'fetch your balance', {}, async argv => {
		const balance = await twetch.wallet.balance();
		console.log('balance: ', balance / 100000000, 'BSV');
		process.exit();
	})
	.command('address', 'display your signing address', {}, async argv => {
		const address = await twetch.wallet.address();
		console.log('address: ', address);
		process.exit();
	})
	.command('storage', 'get information about persistant storage', {}, () => {
		console.log('path', twetch.storage.filePath);
	})
	.help().argv;
